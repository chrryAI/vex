@use "./toRem.scss";

.overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.5);
  backdrop-filter: blur(4px);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1000;
  padding: 20px;
}

.modal {
  background: var(--background);
  border: 1px solid var(--shade-2);
  border-radius: var(--radius-lg);
  box-shadow: var(--shadow-lg);
  width: 100%;
  max-width: 500px;
  max-height: 90vh;
  overflow-y: auto;
  animation: modalSlideIn 0.2s ease-out;
}

@keyframes modalSlideIn {
  from {
    opacity: 0;
    transform: scale(0.95) translateY(-10px);
  }
  to {
    opacity: 1;
    transform: scale(1) translateY(0);
  }
}

.header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 20px 24px 16px;
  border-bottom: 1px solid var(--shade-2);

  h2 {
    font-size: toRem.toRem(18);
    font-weight: 600;
    margin: 0;
    color: var(--text-primary);
  }
}

.closeButton {
  background: none;
  border: none;
  color: var(--text-secondary);
  cursor: pointer;
  padding: 4px;
  border-radius: var(--radius);
  transition: all 0.2s ease;

  &:hover {
    background: var(--shade-1);
    color: var(--text-primary);
  }
}

.form {
  display: flex;
  flex-direction: column;
  gap: 20px;
}

.field {
  display: flex;
  align-items: center;
  gap: 12px;
}

.fieldIcon {
  color: var(--text-secondary);
  flex-shrink: 0;
}

.titleInput {
  flex: 1;
  width: 100%;
  background: none;
  border: none;
  font-size: toRem.toRem(24);
  font-weight: 500;
  color: var(--text-primary);
  padding: 8px 0;
  border-bottom: 2px solid transparent;
  transition: border-color 0.2s ease;

  &:focus {
    outline: none;
    border-bottom-color: var(--primary);
  }

  &::placeholder {
    color: var(--text-disabled);
  }
}

.input {
  flex: 1;
  background: var(--shade-1);
  border: 1px solid var(--shade-2);
  border-radius: var(--radius);
  padding: 12px 16px;
  font-size: toRem.toRem(14);
  color: var(--text-primary);
  transition: all 0.2s ease;

  &:focus {
    outline: none;
    border-color: var(--primary);
    box-shadow: 0 0 0 3px var(--primary-light);
  }

  &::placeholder {
    color: var(--text-secondary);
  }
}

.descriptionEdit {
  display: flex;
  flex-direction: column;
  gap: toRem.toRem(10);
  flex: 1;
  width: 100%;

  button {
    align-self: flex-start;
  }
}
.textarea {
  min-height: 120px;
  width: 100%;
}

.descriptionView {
  width: 100%;
  min-height: 80px;
  color: var(--text);
  line-height: 1.5;
  white-space: pre-wrap;
  word-break: break-word;

  :global(a) {
    color: var(--primary);
    text-decoration: underline;

    &:hover {
      color: var(--primary-dark);
    }
  }
}

.allDayToggle {
  display: flex;
  align-items: center;
  gap: 8px;
  cursor: pointer;
  padding: 8px 0;

  input[type="checkbox"] {
    width: 16px;
    height: 16px;
    accent-color: var(--primary);
  }

  span {
    font-size: toRem.toRem(14);
    color: var(--text-primary);
  }
}

.dateTimeSection {
  .field {
    align-items: center;
  }
}

.dateTimeGroup {
  display: flex;
  flex-direction: column;
  gap: 6px;

  label {
    font-size: toRem.toRem(12);
    font-weight: 500;
    color: var(--text-secondary);
    text-transform: uppercase;
    letter-spacing: 0.5px;
  }
}

.dateTimeInput {
  font-size: toRem.toRem(13);
  transition: all 0.2s ease;
  margin-left: auto;
  font-family: var(--font-mono) !important;
  font-size: toRem.toRem(13.5) !important;

  &:invalid {
    border-color: var(--accent-0);
  }

  // Style the calendar picker icon
  &::-webkit-calendar-picker-indicator {
    filter: invert(0.5);
    cursor: pointer;

    &:hover {
      filter: invert(0.3);
    }
  }
}

.error {
  color: var(--accent-0);
  font-size: toRem.toRem(12);
}

.fieldWrapper {
  .error {
    text-align: right;
    margin-top: toRem.toRem(5);
  }
}

.colorSection {
  flex: 1;
  display: flex;
  align-items: center;
  gap: 12px;
}

.colorLabel {
  font-size: toRem.toRem(14);
  color: var(--text-primary);
  min-width: 40px;
}

.colorOptions {
  display: flex;
  gap: toRem.toRem(6);
}

.colorOption {
  transition: all 0.2s ease;
  &:hover {
    transform: scale(1.15);
  }

  &.selected {
    border-color: var(--foreground);

    transform: scale(1.3);
  }
}

.actions {
  display: flex;
  align-items: center;
  justify-content: flex-end;
  gap: toRem.toRem(10);
  padding-top: toRem.toRem(10);
  border-top: 1px solid var(--shade-2);
  flex-wrap: wrap;
}
